#include "pch.h"
#include "framework.h"
#include <iostream>
#include <string>

using namespace std;

// TODO: To jest przykÅ‚ad funkcji biblioteki
struct Node {
	int data;
	struct Node *next;
};
class LinkedList
{
public:
	Node *head;
	Node *tail;
	int length;
public:
	LinkedList()
	{
		head = NULL;
		tail = NULL;
		length = 0;
	}

	void append(int number, char place = 'f')
	{
		Node *tmp = new Node;
		tmp->data = number;
		tmp->next = NULL;
		
		if (tmp == NULL)
		{
			cout << "memory overflow" << endl;
			return;
		}

		if (head == NULL)
		{
			head = tmp;
			return;
		}
		
		switch (place)
		{
		case 'f':
			tmp->next = head;
			head = tmp;
			break;
		case 'b':
			tail->next = tmp;
			tail = tail->next;
			break;
		default:
			cout << "incorrect input" << endl;
			break;
		}
		length++;
	}
	
	int index(int index, char operation = 'r', int number = 0)
	{
		Node *tmp = NULL;
		tmp = head;

		int i = 0;
		if (index + 1 > length)
		{
			cout << "out of bounds of list" << endl;
			return;
		}
		for (;i < index - 1; i++)
		{
			tmp = tmp->next;
		}
		switch (operation)
		{
		case 'r':
			tmp = tmp->next;
			return tmp->data;
		case 'w':
			tmp = tmp->next;
			tmp->data = number;
			break;
		case 'd':
			Node *del = NULL;
			del = tmp->next;
			tmp->next = tmp->next->next;
			free(del);
			length--;
			break;
		default:
			cout << "incorrect input" << endl;
			break;
		}
		return;
	}

	void display()
	{
		Node *tmp = head;
		while (tmp)
		{
			cout << tmp->data << endl;
			tmp = tmp->next;
		}
	}

	void clear()
	{
		Node *node = head;
		Node *tmp = node;
		while (node)
		{
			node = node->next;
			free(tmp);
			tmp = node;

		}
		length = 0;
	}
};

